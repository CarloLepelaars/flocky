"""Interaction with Flock.io's API"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_api.ipynb.

# %% auto 0
__all__ = ['get_task', 'pd_parse', 'list_open_tasks', 'list_finalized_tasks', 'get_subs', 'parse_subs', 'get_sub_df']

# %% ../nbs/01_api.ipynb 2
import pandas as pd
from fastcore.all import *

from .core import BASE_URL

# %% ../nbs/01_api.ipynb 5
def get_task(task_id: int):
    return AttrDict(loads(urlread(f'{BASE_URL}tasks/get?task_id={task_id}')))

# %% ../nbs/01_api.ipynb 8
def pd_parse(d):
    df = pd.json_normalize(d, max_level=1, sep='_', record_prefix='')
    return df.rename(columns=lambda x: x.replace('data_', '')).T

# %% ../nbs/01_api.ipynb 10
def list_open_tasks():
    return loads(urlread(f'{BASE_URL}tasks/list?status=submission_phase'))

# %% ../nbs/01_api.ipynb 12
def list_finalized_tasks():
    return loads(urlread(f'{BASE_URL}tasks/list?status=finalized'))

# %% ../nbs/01_api.ipynb 14
def get_subs(task_id: int):
    return loads(urlread(f'{BASE_URL}tasks/wallet-submissions?task_id={task_id}', 
                         headers={"flock-api-key":os.getenv('FLOCK_API_KEY')}))

def parse_subs(res):
    cols = ['link','submission_phase_score', 'final_validation_score', 'submitted_at']
    subdf1 = pd.DataFrame.from_dict(res['items'])
    return subdf1[cols].sort_values(by='submission_phase_score', ascending=False).drop_duplicates('link', keep='first')

def get_sub_df(task_id: int):
    return parse_subs(get_subs(task_id))
